<!-- Content wrapper -->
<!-- Jquery js -->
<script type="text/javascript" src="/assets/vendor/libs/jquery/jquery.js"></script>

<!-- Popper js -->
<script src="/assets/vendor/libs/popper/popper.js"></script>

<link rel="stylesheet" href="/assets/vendor/libs/select2/select2.css">

<!-- Bootstrap js -->
<script src="/assets/vendor/js/bootstrap.js"></script>
<link rel="stylesheet" href="/assets/vendor/libs/flatpickr/flatpickr.css" />
<script src="/assets/vendor/libs/flatpickr/flatpickr.js"></script>

<!-- jQuery Validation JS -->
<script type="text/javascript" src="/assets/vendor/libs/jquery/jquery.validate.js"></script>
<link rel="stylesheet" href="/assets/vendor/libs/sweetalert2/sweetalert2.css" />


<div class="content-wrapper">
    <!-- Content -->
    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Doctors/</span> Add-Doctor</h4>
        <!-- Basic Layout & Basic with Icons -->
        <div class="row">
            <!-- Basic with Icons -->
            <div class="col-xxl">
                <div class="card mb-4">

                    <div class="card-header d-flex align-items-center justify-content-between">
                        <h5 class="mb-0">ADD-DOCTORS</h5>
                    </div>

                    <div class="card-body">
                        <form id="adduser" enctype="multipart/form-data" class="row g-3" method="post">

                            <!-- Account Details -->
                            <div class="col-12">
                                <h6 class="fw-semibold"></h6>
                                <hr class="mt-0" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label" for="formValidationFirstName">First Name</label>
                                <input type="text" id="formValidationFirstName" class="form-control" placeholder="John"
                                    name="formValidationFirstName" value="vinay" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label" for="formValidationLastName">Last Name</label>
                                <input type="text" id="formValidationLastName" value="Danidhariya" class="form-control"
                                    placeholder="Doe" name="formValidationLastName" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label" for="formValidationEmail">Email</label>
                                <input class="form-control" type="text" value="vinaydanidhariya@gmail.com"
                                    name="formValidationEmail" placeholder="abc@mail.com" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label" for="tel">Phone Number</label>
                                <input type="text" id="tel" class="form-control" placeholder="Phone Number"
                                    value="1234567890" name="formValidationMobile" />
                            </div>

                            <div class="col-md-6">
                                <div class="form-password-toggle">
                                    <label class="form-label" for="formValidationPassword">Password</label>
                                    <div class="input-group input-group-merge">
                                        <input class="form-control" type="password" name="formValidationPassword"
                                            placeholder="&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;"
                                            aria-describedby="multicol-password2" value="SHC@778899" />
                                        <span class="input-group-text cursor-pointer"><i class="bx bx-hide"></i></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-password-toggle">
                                    <label class="form-label" for="formValidationConfirmPass">Confirm Password</label>
                                    <div class="input-group input-group-merge">
                                        <input class="form-control" type="password" name="formValidationConfirmPass"
                                            placeholder="&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;"
                                            aria-describedby="multicol-password2" value="SHC@778899" />
                                        <span class="input-group-text cursor-pointer"><i class="bx bx-hide"></i></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <label for="formValidationFile" class="form-label">Profile Pic</label>
                                <input class="form-control" type="file" name="formValidationFile"
                                    accept="image/png, image/jpg, image/jpeg" id="formValidationFile">
                            </div>

                            <div class="col-md-6">
                                <label class="form-label" for="formValidationDob">DOB</label>
                                <input type="text" class="form-control flatpickr-validation" name="formValidationDob"
                                    id="formValidationDob" required value="07/07/2023" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label" for="formValidationPrice">Price</label>
                                <input type="number" class="form-control" name="formValidationPrice"
                                    id="formValidationPrice" value="123456" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label" for="formValidationQualifications">Qualifications</label>
                                <input type="text" value="MBBS" class="form-control"
                                    name="formValidationQualifications" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label" for="formValidationSelect2">Department</label>
                                <select id="formValidationSelect2" name="formValidationSelect2"
                                    class="form-select select2" data-allow-clear="true">
                                </select>
                            </div>

                            <div class="col-md-6">
                                <label class="form-label">Gender</label>
                                <div class="form-check custom">
                                    <input type="radio" id="formValidationGender" name="formValidationGender"
                                        class="form-check-input" value="Male" checked />
                                    <label class="form-check-label" for="formValidationGender">Male</label>
                                </div>
                                <div class="form-check custom">
                                    <input type="radio" id="formValidationGender2" name="formValidationGender"
                                        class="form-check-input" value="Female" />
                                    <label class="form-check-label" for="formValidationGender2">Female</label>
                                </div>
                            </div>

                            <div class="row pt-4">
                                <button type="submit" id="addDoctorSubmit" class="btn btn-primary" name="submitButton"
                                    style="width: 30rem; margin: 0 auto;">Submit</button>
                            </div>

                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- / Content -->
    <div class="content-backdrop fade"></div>
</div>
<!-- Content wrapper -->
<script src="/assets/vendor/libs/select2/select2.js"></script>
<script src="/assets/vendor/libs/bootstrap-select/bootstrap-select.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="/assets/vendor/libs/sweetalert2/sweetalert2.js"></script>
<script>
    ! function () {
        window.Helpers.initCustomOptionCheck();
        var e = [].slice.call(document.querySelectorAll(".flatpickr-validation")),
            e = (e && e.forEach(e => {
                e.flatpickr({
                    allowInput: !0,
                    monthSelectorType: "static"
                })
            }), document.querySelectorAll(".needs-validation"));
        Array.prototype.slice.call(e).forEach(function (a) {
            a.addEventListener("submit", function (e) {
                a.checkValidity() ? alert("Submitted!!!") : (e.preventDefault(), e.stopPropagation()), a.classList.add("was-validated")
            }, !1)
        })
    }(),

        document.addEventListener("DOMContentLoaded", async function (e) {
            {
                function fetchData() {
                    $.ajax({
                        url: '/doctors/doctor-department',
                        method: 'POST',
                        data: {
                            code: 778899
                        },
                        success: function (responseData) {
                            populateOptions(responseData);
                        },
                        error: function (xhr, status, error) {
                            console.log('Request failed. Status:', status);
                        }
                    });
                }

                function populateOptions(data) {
                    var selectElement = $('#formValidationSelect2');

                    // Clear any existing options
                    selectElement.empty();

                    // Add a default option
                    selectElement.append($('<option>').val("").text("Select Department"));

                    // Iterate over the data and create options
                    $.each(data, function (index, item) {
                        var option = $('<option>').val(item.title).text(item.title);
                        selectElement.append(option);
                    });
                }

                fetchData()

                const t = document.getElementById("adduser"),
                    submitButton = document.getElementById('addDoctorSubmit'),
                    o = jQuery(t.querySelector('[name="formValidationSelect2"]')),
                    i = jQuery(t.querySelector('[name="formValidationDepartment"]')),
                    r = FormValidation.formValidation(t, {
                        fields: {
                            formValidationFirstName: {
                                validators: {
                                    notEmpty: {
                                        message: "Please enter your First name"
                                    },
                                    stringLength: {
                                        min: 3,
                                        max: 15,
                                        message: "The name must be more than 6 and less than 30 characters long"
                                    },
                                    regexp: {
                                        regexp: /^[a-zA-Z]+$/,
                                        message: "The name can only consist of alphabetical, not number"
                                    }
                                }
                            },
                            formValidationLastName: {
                                validators: {
                                    notEmpty: {
                                        message: "Please enter your Last name"
                                    },
                                    stringLength: {
                                        min: 3,
                                        max: 15,
                                        message: "The name must be more than 6 and less than 30 characters long"
                                    },
                                    regexp: {
                                        regexp: /^[a-zA-Z]+$/,
                                        message: "The name can only consist of alphabetical,not number"
                                    }
                                }
                            },
                            formValidationEmail: {
                                validators: {
                                    notEmpty: {
                                        message: "Please enter your email"
                                    },
                                    emailAddress: {
                                        message: "The value is not a valid email address"
                                    }
                                }
                            },
                            formValidationPassword: {
                                validators: {
                                    notEmpty: {
                                        message: "Please enter your password"
                                    }
                                }
                            },
                            formValidationConfirmPass: {
                                validators: {
                                    notEmpty: {
                                        message: "Please confirm password"
                                    },
                                    identical: {
                                        compare: function () {
                                            return t.querySelector('[name="formValidationPassword"]').value
                                        },
                                        message: "The password and its confirm are not the same"
                                    }
                                }
                            },
                            formValidationMobile: {
                                validators: {
                                    notEmpty: {
                                        message: "Please Enter Mobile"
                                    }
                                }
                            },
                            formValidationFile: {
                                validators: {
                                    notEmpty: {
                                        message: "Please select the file"
                                    }
                                }
                            },
                            formValidationDob: {
                                validators: {
                                    notEmpty: {
                                        message: "Please Enter your DOB"
                                    },
                                    date: {
                                        format: "DD/MM/YYYY",
                                        message: "The value is not a valid date"
                                    }
                                }
                            },
                            formValidationPrice: {
                                validators: {
                                    notEmpty: {
                                        message: "Please Enter charge of Doctor"
                                    }
                                }
                            },
                            formValidationSelect2: {
                                validators: {
                                    notEmpty: {
                                        message: "Please select your country"
                                    }
                                }
                            },
                            formValidationQualifications: {
                                validators: {
                                    notEmpty: {
                                        message: "Please add your Qualifications"
                                    }
                                }
                            },
                            formValidationDepartment: {
                                validators: {
                                    notEmpty: {
                                        message: "Please select Department"
                                    }
                                }
                            },
                            formValidationGender: {
                                validators: {
                                    notEmpty: {
                                        message: "Please select Gender"
                                    }
                                }
                            },
                        },
                        plugins: {
                            trigger: new FormValidation.plugins.Trigger,
                            bootstrap5: new FormValidation.plugins.Bootstrap5({
                                eleValidClass: "",
                                rowSelector: function (e, a) {
                                    switch (e) {
                                        case "formValidationFirstName":
                                        case "formValidationLastName":
                                        case "formValidationEmail":
                                        case "formValidationPassword":
                                        case "formValidationConfirmPass":
                                        case "formValidationMobile":
                                        case "formValidationFile":
                                        case "formValidationDob":
                                        case "formValidationDepartment":
                                        case "formValidationPrice":
                                        case "formValidationQualifications":
                                        case "formValidationSelect2":
                                        case "formValidationGender":
                                            return ".col-md-6";
                                        case "formValidationPlan":
                                            return ".col-xl-3";
                                        case "formValidationCheckbox":
                                            return ".col-12";
                                        default:
                                            return ".row"
                                    }
                                }
                            }),
                            submitButton: new FormValidation.plugins.SubmitButton,
                            autoFocus: new FormValidation.plugins.AutoFocus
                        },
                        init: e => {
                            e.on("plugins.message.placed", function (e) {
                                e.element.parentElement.classList.contains("input-group") && e.element.parentElement.insertAdjacentElement("afterend", e.messageElement), e.element.parentElement.parentElement.classList.contains("custom-option") && e.element.closest(".row").insertAdjacentElement("afterend", e.messageElement)
                            })
                        }
                    });

                r.on('core.form.valid', function (e) {
                    try {
                        let demoForm = document.getElementById('adduser')
                        var doctorFormData = new FormData();
                        // Append the text fields
                        doctorFormData.append("f", "t")
                        doctorFormData.append('firstName', demoForm.querySelector('[name="formValidationFirstName"]').value);
                        doctorFormData.append('lastName', demoForm.querySelector('[name="formValidationLastName"]').value);
                        doctorFormData.append('email', demoForm.querySelector('[name="formValidationEmail"]').value);
                        doctorFormData.append('password', demoForm.querySelector('[name="formValidationPassword"]').value);
                        doctorFormData.append('phone', demoForm.querySelector('[name="formValidationMobile"]').value);
                        doctorFormData.append('dateOfBirth', demoForm.querySelector('[name="formValidationDob"]').value);
                        doctorFormData.append('price', demoForm.querySelector('[name="formValidationPrice"]').value);
                        doctorFormData.append('qualification', demoForm.querySelector('[name="formValidationQualifications"]').value);
                        doctorFormData.append('department', demoForm.querySelector('[name="formValidationSelect2"]').value);
                        doctorFormData.append('gender', demoForm.querySelector('[name="formValidationGender"]').value);
                        const image = demoForm.querySelector('[name="formValidationFile"]');
                        doctorFormData.append('avatar', image.files[0]);


                        axios.post('/doctors/add-doctor', doctorFormData, {
                            headers: {
                                'Content-Type': 'multipart/form-data'
                            }
                        }).then(function (response) {
                            if (response.data.type === 'success') { // Check response.data.type instead of response.type
                                Swal.fire({
                                    position: "top-start",
                                    icon: "success",
                                    title: response.data.message,
                                    showConfirmButton: !1,
                                    timer: 1500,
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    },
                                    buttonsStyling: !1,
                                }).then(function () {
                                    window.location.href = window.location.href;
                                });
                            } else {
                                Swal.fire({
                                    position: "top-start",
                                    icon: "success",
                                    title: response.data.message,
                                    showConfirmButton: !1,
                                    timer: 1500,
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    },
                                    buttonsStyling: !1,
                                });
                            }
                        })
                    } catch (error) {
                        console.error(error);
                    }
                })

                var a, n;
                flatpickr(t.querySelector('[name="formValidationDob"]'), {
                    enableTime: !1,
                    dateFormat: "d/m/Y",
                    onChange: function () {
                        r.revalidateField("formValidationDob")
                    }
                }),
                    o.length && (o.wrap('<div class="position-relative"></div>'), o.select2({
                        placeholder: "Select Department",
                        dropdownParent: o.parent()
                    }).on("change.select2", function () {
                        r.revalidateField("formValidationSelect2")
                    }))
            }
        });
</script>